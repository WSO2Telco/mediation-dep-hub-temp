<?xml version="1.0" encoding="UTF-8"?>
<sequence name="smsInboundSubscriptionSplitterSeq" onError="smsInboundSubscriptionSplitterFaultSeq" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <log level="custom">
        <property name="STATUS" value="==== @ SMS Inbound Subs SplitterSeq ===="/>
    </log>
    <iterate attachPath="//subscription" expression="//destinationAddresses" id="sms_notif_splitter" preservePayload="true">
        <target>
            <sequence>
                <enrich>
                    <source clone="true" xpath="//destinationAddresses/criteria"/>
                    <target action="child" xpath="//subscription"/>
                </enrich>
                <enrich>
                    <source clone="true" xpath="//destinationAddresses/destinationAddress"/>
                    <target action="child" xpath="//subscription"/>
                </enrich>
                <property expression="//destinationAddresses/operatorCode/text()" name="operatorCode" scope="default" type="STRING"/>
                <property expression="//destinationAddresses/toAddress/text()" name="toAddress" scope="default" type="STRING"/>
                <property expression="//destinationAddresses/operatorCode/text()" name="OPERATOR_NAME" scope="default" type="STRING"/>
                <property expression="//destinationAddresses/operatorId/text()" name="OPERATOR_ID" scope="default" type="STRING"/>
                <header expression="//destinationAddresses/toAddress/text()" name="To" scope="default"/>
                <header expression="//destinationAddresses/authorizationHeader/text()" name="Authorization" scope="transport"/>
                <!--<script language="js"><![CDATA[var payload = mc.getPayloadXML();
                delete payload..*::destinationAddresses.toAddress;
                delete payload..*::destinationAddresses.authorizationHeader;
                delete payload..*::destinationAddresses.operatorId;
                mc.setPayloadXML(payload);]]></script>-->
                <class name="com.wso2telco.dep.mediator.XmlAlterMediator">
                    <property name="removeEl" value="destinationAddresses.toAddress_destinationAddresses.authorizationHeader_destinationAddresses.operatorId"/>
                </class>
                <enrich>
                    <source clone="true" xpath="//destinationAddresses"/>
                    <target property="original_payload" type="property"/>
                </enrich>
                <enrich>
                    <source clone="true" xpath="//callbackReference"/>
                    <target property="original_callbackReference" type="property"/>
                </enrich>
                <filter regex="Not Provisioned" source="$ctx:toAddress">
                    <then>
                        <property name="status" scope="default" type="STRING" value="Not Provisioned"/>
                        <sequence key="smsInboundSubscriptionGatherSeq"/>
                    </then>
                    <else/>
                </filter>
                <!--<script language="js"><![CDATA[var payload = mc.getPayloadXML();
                delete payload..*::destinationAddresses;
                mc.setPayloadXML(payload);]]></script>-->
                <class name="com.wso2telco.dep.mediator.XmlAlterMediator">
                    <property name="removeEl" value="subscription.destinationAddresses"/>
                </class>
                <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
                
                <call-template target="com.wso2telco.dep.common.loggingExtension.Template">
      				<with-param name="direction" value="REQUESTOUT"/>
    			</call-template>

				<call-template target="com.wso2telco.dep.common.quota.limit.Template">
				    <with-param name="direction" value="sb"/>
				    <with-param name="skipErrorSeq" value="true"/>
				 </call-template>
				 
				 
				 <filter regex="true" source="get-property('INTERNAL_ERROR')">
					<then>
						<sequence key="smsInboundSubscriptionSplitterFaultSeq" />
					</then>
					<else />
				</filter>

                <call-template target="com.wso2telco.dep.common.main.request.datapublisher.Template">
                    <with-param name="msisdn" value="{$ctx:MSISDN}"/>
                    <with-param name="direction" value="sb"/>
                </call-template>
    
                <call>
                    <endpoint key="defaultSMSEndpoint"/>
                </call>

			    <call-template target="com.wso2telco.dep.common.loggingExtension.Template">
			 		<with-param name="direction" value="RESPONSEIN"/>
				</call-template>

                <call-template target="com.wso2telco.dep.common.main.response.datapublisher.Template">
                    <with-param name="msisdn" value="{$ctx:MSISDN}"/>
                    <with-param name="direction" value="sb"/>
                </call-template>
	                
                <sequence key="smsInboundSubscriptionGatherSeq"/>
            </sequence>
        </target>
    </iterate>
</sequence>
