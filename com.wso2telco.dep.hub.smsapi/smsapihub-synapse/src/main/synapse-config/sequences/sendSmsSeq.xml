<?xml version="1.0" encoding="UTF-8"?>
<sequence name="sendSmsSeq" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <property name="HTTP_METHOD" scope="axis2" type="STRING" value="POST"/>
    <property action="remove" name="REST_URL_POSTFIX" scope="axis2"/>

    <property expression="json-eval($.outboundSMSMessageRequest.clientCorrelator)" name="clientCorrelator" scope="default" type="STRING"/>
    <property expression="fn:normalize-space($ctx:clientCorrelator)" group="1" name="clientCorrelator" pattern="((^(?!null).*$)|(^(null).+$))" scope="default" type="STRING"/>

    <!-- generating request clientCorrelator -->
    <call-template target="com.wso2telco.dep.common.clientCorrelator.generator.Template">
        <with-param name="clientCorrelator" value="{$ctx:clientCorrelator}"/>
    </call-template>

    <header expression="get-property('ENDPOINT')" name="To" scope="default"/>
    <property expression="json-eval($.)" name="original_body" scope="default" type="STRING"/>
    <enrich>
        <source clone="true" xmlns:ns="http://org.apache.synapse/xsd" xpath="//address"/>
        <target xmlns:ns="http://org.apache.synapse/xsd" xpath="//outboundSMSMessageRequest"/>
    </enrich>
    <foreach expression="//address" xmlns:ns="http://org.apache.synapse/xsd">
        <sequence>
            <property expression="//address/text()" name="MSISDN" scope="default" type="STRING"/>
            <!-- if request is USER_ANONYMIZED then get actual msisdn -->
            <filter regex="true" source="get-property('USER_ANONYMIZATION')">
                <then>
                    <property expression="//address/text()" name="MSISDN" scope="default" type="STRING"/>
                    <class name="org.wso2telco.dep.nashornmediator.NashornMediator">
                        <property name="script" value="
				            var msisdn =  mc.getProperty('MSISDN');
				            var maskedMsisdnMap = mc.getProperty('MASKED_MSISDN_MAP');
				            mc.setProperty('MSISDN', maskedMsisdnMap.get(msisdn));
				        "/>
                    </class>
                </then>
                <else/>
            </filter>
            <!-- validate the msisdn for black list and white list -->
            <call-template target="com.wso2telco.dep.common.msisdnValidator.Template">
                <with-param name="paramName" value="address"/>
                <with-param name="paramValue" value="{$ctx:MSISDN}"/>
                <with-param name="paramArray" value="{$ctx:MSISDN_LIST}"/>
            </call-template>
            <filter regex="^true$" source="$trp:api.check.blacklist">
                <then>
                    <filter regex="^true$" source="$ctx:BLACKLISTED_MSISDN">
                        <then>
                            <drop/>
                        </then>
                        <else/>
                    </filter>
                </then>
                <else/>
            </filter>
            <filter regex="^true$" source="$trp:api.check.whitelist">
                <then>
                    <filter regex="^false$" source="$ctx:WHITELISTED_MSISDN">
                        <then>
                            <drop/>
                        </then>
                        <else/>
                    </filter>
                </then>
                <else/>
            </filter>
        </sequence>
    </foreach>
    <filter regex="^true$" source="$trp:api.check.blacklist" xmlns:ns="http://org.apache.synapse/xsd">
        <then>
            <filter regex="^true$" source="$ctx:BLACKLISTED_MSISDN">
                <then>
                    <drop/>
                </then>
                <else/>
            </filter>
        </then>
        <else/>
    </filter>
    <filter regex="^true$" source="$trp:api.check.whitelist" xmlns:ns="http://org.apache.synapse/xsd">
        <then>
            <filter regex="^false$" source="$ctx:WHITELISTED_MSISDN">
                <then>
                    <drop/>
                </then>
                <else/>
            </filter>
        </then>
        <else/>
    </filter>
    <class name="org.wso2telco.dep.nashornmediator.NashornMediator">
        <property name="script" value="
        var originalJSONPayloadString = mc.getProperty('original_body');
        var originalJSONPayload = JSON.parse(originalJSONPayloadString);
        originalJSONPayload.outboundSMSMessageRequest.clientCorrelator = mc.getProperty('uniqueClientCorrelator');
        mc.setPayloadJSON(JSON.stringify(originalJSONPayload));
        "/>
    </class>

    <call-template target="com.wso2telco.dep.common.loggingExtension.Template">
      <with-param name="direction" value="REQUESTOUT"/>
    </call-template>

	<call-template target="com.wso2telco.dep.common.quota.limit.Template">
	    <with-param name="direction" value="sb"/>
	 </call-template>

    <call-template target="com.wso2telco.dep.common.main.request.datapublisher.Template">
        <with-param name="msisdn" value="{$ctx:MSISDN_LIST}"/>
        <with-param name="direction" value="sb"/>
    </call-template>

    <!-- Resolve anonymize user data before operator call  -->
    <call-template target="com.wso2telco.dep.common.anonymizeUserData.Template">
        <with-param name="anonymize" value="false"/>
        <with-param name="handler" value="{$ctx:HANDLER}"/>
    </call-template>

    <call>
        <endpoint key="defaultSMSEndpoint"/>
    </call>

    <!-- Anonymize user data  -->
    <call-template target="com.wso2telco.dep.common.anonymizeUserData.Template">
        <with-param name="anonymize" value="true"/>
        <with-param name="handler" value="{$ctx:HANDLER}"/>
    </call-template>

    <call-template target="com.wso2telco.dep.common.loggingExtension.Template">
 		<with-param name="direction" value="RESPONSEIN"/>
	</call-template>

    <call-template target="com.wso2telco.dep.common.main.response.datapublisher.Template">
        <with-param name="msisdn" value="{$ctx:MSISDN_LIST}"/>
        <with-param name="direction" value="sb"/>
    </call-template>

    <sequence key="cacheClearingSeq"/>

    <switch source="$axis2:HTTP_SC">
        <case regex="(200|201)">
            <sequence key="sendSmsOutSeq"/>
            <class name="org.wso2telco.dep.nashornmediator.NashornMediator">
                <property name="script" value="
                    var payload = mc.getPayloadJSON();
                    payload.outboundSMSMessageRequest.clientCorrelator = mc.getProperty('clientCorrelator');
                    mc.setPayloadJSON(payload);
                "/>
            </class>
        </case>
        <case regex="(400|403|404|405|500|503)">
            <property expression="//messageId" name="ERROR_CODE"
                scope="default" type="STRING"/>
            <property expression="//variables" name="errvar"
                scope="default" type="STRING"/>
            <property name="BACKEND_ERROR_SET" scope="default"
                      type="STRING" value="yes"/>
            <sequence key="commonFault"/>
        </case>
        <default/>
    </switch>

    <call-template target="com.wso2telco.dep.common.loggingExtension.Template">
 		<with-param name="direction" value="RESPONSEOUT"/>
	</call-template>

    <call-template target="com.wso2telco.dep.common.main.response.datapublisher.Template">
        <with-param name="msisdn" value="{$ctx:MSISDN_LIST}"/>
        <with-param name="direction" value="nb"/>
    </call-template>

    <respond/>
</sequence>
